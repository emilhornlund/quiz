@use 'sass:color';
@use './colors';
@use './helpers';
@use './variables';

.input {
  align-items: center;
  border: variables.$control-outside-border-width solid transparent;
  display: flex;
  flex-direction: row;
  flex-grow: 0;
  flex-shrink: 1;
  justify-content: center;
  margin: calc(#{variables.$control-outside-border-width} * 2);
  outline-offset: variables.$control-outside-border-width;
  outline-style: solid;
  outline-width: variables.$control-outside-border-width;
  overflow: hidden;
  position: relative;

  @extend .input-kind-primary;

  &:has(> input:disabled, select:disabled, textarea:disabled, button:disabled) {
    @extend .inout-kind-disabled;
  }

  input, select, textarea, button {
    -moz-appearance: none;
    -o-appearance: none;
    -webkit-appearance: none;
    appearance: none;
    background-color: transparent;
    border: none;
    display: inline-flex;
    flex-direction: row;
    flex: 1;
    font-family: inherit;
    height: 100%;
    outline: none;
    align-items: center;
    justify-content: center;
    min-width: 0;

    @include helpers.mobile {
      column-gap: variables.$mobile-control-normal-layout-gutter;

      @include helpers.fontSize(variables.$mobile-control-normal-font-size);
    }

    @include helpers.tablet {
      column-gap: variables.$tablet-control-normal-layout-gutter;

      @include helpers.fontSize(variables.$tablet-control-normal-font-size);
    }

    @include helpers.desktop {
      column-gap: variables.$desktop-control-normal-layout-gutter;

      @include helpers.fontSize(variables.$desktop-control-normal-font-size);
    }
  }

  /* begin select overrides */
  select {
    cursor: pointer;
  }
  /* end select overrides */

  /* begin textarea overrides */
  textarea {
    resize: none;
  }
  &:has(> textarea) {
    flex-grow: 1;
  }
  &:not(textarea) {
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
  }
  /* end textarea overrides */

  /* begin button overrides */
  button {
    cursor: pointer;
    font-weight: bold;
  }
  /* end button overrides */

  @include helpers.mobile {
    border-radius: variables.$mobile-control-normal-border-radius;
    min-height: variables.$mobile-control-normal-height;
    padding: 0 variables.$mobile-control-normal-layout-gutter;

    &:has(> textarea) {
      padding: variables.$mobile-control-normal-layout-gutter;
    }
  }

  @include helpers.tablet {
    border-radius: variables.$tablet-control-normal-border-radius;
    min-height: variables.$tablet-control-normal-height;
    padding: 0 variables.$tablet-control-normal-layout-gutter;

    &:has(> textarea) {
      padding: variables.$tablet-control-normal-layout-gutter;
    }
  }

  @include helpers.desktop {
    border-radius: variables.$desktop-control-normal-border-radius;
    min-height: variables.$desktop-control-normal-height;
    padding: 0 variables.$desktop-control-normal-layout-gutter;

    &:has(> textarea) {
      padding: variables.$desktop-control-normal-layout-gutter;
    }
  }
}

.input-kind-primary {
  outline-color: colors.$control-primary-normal-color;
  background-color: colors.$control-primary-normal-color;

  &:has(> button) {
    background-color: colors.$control-primary-normal-color;
  }
  input, select, textarea, button {
    color: colors.$control-text-normal-color;
  }

  &:has(> button:hover, button:disabled) {
    background-color: color.mix(colors.$white, colors.$control-primary-normal-color, 30%);
    outline-color: color.mix(colors.$white, colors.$control-primary-normal-color, 30%);

    button {
      color: color.mix(colors.$white, colors.$control-text-normal-color, 30%);
    }
  }
}

.input-kind-secondary {
  outline-color: colors.$control-secondary-normal-color;

  &:has(> button) {
    background-color: colors.$control-secondary-normal-color;
  }
  button {
    color: colors.$control-text-normal-color;
  }

  &:has(> button:hover, button:disabled) {
    background-color: color.mix(colors.$white, colors.$control-secondary-normal-color, 30%);
    outline-color: color.mix(colors.$white, colors.$control-secondary-normal-color, 30%);

    button {
      color: color.mix(colors.$white, colors.$control-text-normal-color, 30%);
    }
  }
}

.inout-kind-disabled {
  background-color: colors.$control-primary-disabled-color;
  outline-color: colors.$control-primary-disabled-color;

  input, select, textarea, button {
    color: colors.$control-text-disabled-color;
    cursor: default;
  }
}

.input-kind-call-to-action {
  outline-color: colors.$control-primary-call-to-action-color;

  &:has(> button) {
    background-color: colors.$control-primary-call-to-action-color;
  }
  button {
    color: colors.$control-text-normal-color;
  }

  &:has(> button:hover, button:disabled) {
    background-color: color.mix(colors.$white, colors.$control-primary-call-to-action-color, 30%);
    outline-color: color.mix(colors.$white, colors.$control-primary-call-to-action-color, 30%);

    button {
      color: color.mix(colors.$white, colors.$control-text-normal-color, 30%);
    }
  }
}

.input-kind-success {
  outline-color: colors.$control-primary-success-color;

  &:has(> button) {
    background-color: colors.$control-primary-success-color;
  }
  button {
    color: colors.$control-text-contrast-color;
  }

  &:has(> button:hover, button:disabled) {
    background-color: color.mix(colors.$white, colors.$control-primary-success-color, 30%);
    outline-color: color.mix(colors.$white, colors.$control-primary-success-color, 30%);

    button {
      color: color.mix(colors.$white, colors.$control-text-contrast-color, 30%);
    }
  }
}

.input-kind-destructive {
  outline-color: colors.$control-primary-danger-color;

  &:has(> button) {
    background-color: colors.$control-primary-danger-color;
  }
  button {
    color: colors.$control-text-contrast-color;
  }

  &:has(> button:hover, button:disabled) {
    background-color: color.mix(colors.$white, colors.$control-primary-danger-color, 30%);
    outline-color: color.mix(colors.$white, colors.$control-primary-danger-color, 30%);

    button {
      color: color.mix(colors.$white, colors.$control-text-contrast-color, 30%);
    }
  }
}

.input-kind-plain {
  outline-color: transparent;
  background-color: transparent;

  input, select, textarea, button {
    background-color: transparent;
    outline-color: transparent;
    color: colors.$white;
  }

  &:has(> button:hover, button:disabled) {
    background-color: transparent;
    outline-color: transparent;

    button {
      color: color.mix(colors.$white, colors.$gray-1, 30%);
    }
  }
}

.input-size-small {
  @include helpers.mobile {
    border-radius: variables.$mobile-control-small-border-radius;
    min-height: variables.$mobile-control-small-height;
    padding: 0 variables.$mobile-control-small-layout-gutter;

    input, select, textarea, button {
      column-gap: variables.$mobile-control-small-layout-gutter;

      @include helpers.fontSize(variables.$mobile-control-small-font-size);
    }
  }

  @include helpers.tablet {
    border-radius: variables.$tablet-control-small-border-radius;
    min-height: variables.$tablet-control-small-height;
    padding: 0 variables.$tablet-control-small-layout-gutter;

    input, select, textarea, button {
      column-gap: variables.$tablet-control-small-layout-gutter;

      @include helpers.fontSize(variables.$tablet-control-small-font-size);
    }
  }

  @include helpers.desktop {
    border-radius: variables.$desktop-control-small-border-radius;
    min-height: variables.$desktop-control-small-height;
    padding: 0 variables.$desktop-control-small-layout-gutter;

    input, select, textarea, button {
      column-gap: variables.$desktop-control-small-layout-gutter;

      @include helpers.fontSize(variables.$desktop-control-small-font-size);
    }
  }
}

.input-error {
  align-items: center;
  background-color: colors.$yellow-2;
  color: colors.$gray-4;
  display: inline-flex;
  flex-direction: row;
  flex-wrap: nowrap;
  font-weight: bold;
  justify-content: flex-start;

  @include helpers.mobile {
    border-radius: variables.$mobile-control-normal-border-radius;
    padding: variables.$mobile-control-normal-layout-gutter;
    column-gap: variables.$mobile-control-normal-layout-gutter;

    @include helpers.fontSize(variables.$mobile-control-small-font-size);
  }

  @include helpers.tablet {
    border-radius: variables.$tablet-control-normal-border-radius;
    padding: variables.$tablet-control-normal-layout-gutter;
    column-gap: variables.$tablet-control-normal-layout-gutter;

    @include helpers.fontSize(variables.$tablet-control-small-font-size);
  }

  @include helpers.desktop {
    border-radius: variables.$desktop-control-normal-border-radius;
    padding: variables.$desktop-control-normal-layout-gutter;
    column-gap: variables.$desktop-control-normal-layout-gutter;

    @include helpers.fontSize(variables.$desktop-control-small-font-size);
  }
}

@use '../../styles/inputs';
@use '../../styles/loading';
@use '../../styles/colors';
@use '../../styles/helpers';
@use '../../styles/variables';

.buttonInputContainer {
  @extend .input;

  button {
    .loadingSpinner {
      @extend .loading-spinner;

      @include helpers.mobile {
        $--mobile-loading-spinner-size: calc(#{variables.$mobile-control-normal-height} * 0.9);
        @include loading.loading-spinner-dimensions($--mobile-loading-spinner-size, colors.$gray-4, button-mobile-normal);
      }

      @include helpers.tablet {
        $--tablet-loading-spinner-size: calc(#{variables.$tablet-control-normal-height} * 0.9);
        @include loading.loading-spinner-dimensions($--tablet-loading-spinner-size, colors.$gray-4, button-tablet-normal);
      }

      @include helpers.desktop {
        $--desktop-loading-spinner-size: calc(#{variables.$desktop-control-normal-height} * 0.9);
        @include loading.loading-spinner-dimensions($--desktop-loading-spinner-size, colors.$gray-4, button-desktop-normal);
      }
    }
  }

  &.buttonInputKindPrimary {
    @extend .input-kind-primary;
  }

  &.buttonInputKindSecondary {
    @extend .input-kind-secondary;
  }

  &.buttonInputKindCallToAction {
    @extend .input-kind-call-to-action;
  }

  &.buttonInputKindSuccess {
    @extend .input-kind-success;
  }

  &.buttonInputKindDestructive {
    @extend .input-kind-destructive;
  }

  &.buttonInputKindPlain {
    @extend .input-kind-plain;
  }

  &.buttonInputVariantModern {
    position: relative;
    overflow: hidden;
    border-radius: helpers.pxToRem(12px);
    background: linear-gradient(135deg, #ffd700 0%, #ffed4e 100%);
    border: none;
    outline: none;
    transition: all 0.3s ease;
    box-shadow: 0 helpers.pxToRem(8px) helpers.pxToRem(25px) rgba(255, 215, 0, 0.3);
    
    button {
      color: #333;
      font-weight: 600;
      background: transparent;
      border: none;
      outline: none;
      
      @include helpers.mobile {
        @include helpers.fontSize(14px);
      }
      
      @include helpers.tablet {
        @include helpers.fontSize(15px);
      }
      
      @include helpers.desktop {
        @include helpers.fontSize(16px);
      }
    }
    
    &:hover {
      transform: translateY(helpers.pxToRem(-2px));
      box-shadow: 0 helpers.pxToRem(12px) helpers.pxToRem(35px) rgba(255, 215, 0, 0.4);
      
      &::before {
        transform: translateX(100%);
      }
    }
    
    &:active {
      transform: translateY(0);
      box-shadow: 0 helpers.pxToRem(6px) helpers.pxToRem(20px) rgba(255, 215, 0, 0.3);
    }
    
    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(
        90deg,
        transparent,
        rgba(255, 255, 255, 0.3),
        transparent
      );
      transition: transform 0.6s ease;
    }
    
    &:has(> button:disabled) {
      background: linear-gradient(135deg, #ffd700 0%, #ffed4e 100%);
      opacity: 1;
      cursor: pointer;
      transform: none;
      box-shadow: 0 helpers.pxToRem(8px) helpers.pxToRem(25px) rgba(255, 215, 0, 0.3);
      
      &:hover {
        transform: translateY(helpers.pxToRem(-2px));
        box-shadow: 0 helpers.pxToRem(12px) helpers.pxToRem(35px) rgba(255, 215, 0, 0.4);
        
        &::before {
          transform: translateX(100%);
        }
      }
    }
    
    @include helpers.mobile {
      padding: variables.$mobile-control-normal-layout-gutter calc(variables.$mobile-layout-gutter * 1.75);
    }
    
    @include helpers.tablet {
      padding: variables.$tablet-control-normal-layout-gutter calc(variables.$tablet-layout-gutter * 2);
    }
    
    @include helpers.desktop {
      padding: variables.$desktop-control-normal-layout-gutter calc(variables.$desktop-layout-gutter * 2);
    }
  }

  &.buttonInputSizeSmall {
    @extend .input-size-small;

    button {
      .loadingSpinner {
        @include helpers.mobile {
          $--mobile-loading-spinner-size: calc(#{variables.$mobile-control-small-height} * 0.9);
          @include loading.loading-spinner-dimensions($--mobile-loading-spinner-size, colors.$gray-4, button-mobile-small);
        }

        @include helpers.tablet {
          $--tablet-loading-spinner-size: calc(#{variables.$tablet-control-small-height} * 0.9);
          @include loading.loading-spinner-dimensions($--tablet-loading-spinner-size, colors.$gray-4, button-tablet-small);
        }

        @include helpers.desktop {
          $--desktop-loading-spinner-size: calc(#{variables.$desktop-control-small-height} * 0.9);
          @include loading.loading-spinner-dimensions($--desktop-loading-spinner-size, colors.$gray-4, button-desktop-small);
        }
      }
    }
  }
}

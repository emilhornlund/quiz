@use '../../styles/colors';
@use '../../styles/helpers';
@use '../../styles/inputs';
@use '../../styles/variables';

.segmentedControl {
  display: flex;
  flex-direction: row;

  .segmentedControlItem {
    @extend .input;

    flex: 1;
    border-radius: 0;

    &.segmentedControlInputKindPrimary {
      &.segmentedControlInputActive {
        @extend .input-kind-call-to-action;
      }
      &.segmentedControlInputInactive {
        @extend .input-kind-primary;
      }
    }

    &.segmentedControlInputKindSecondary {
      &.segmentedControlInputActive {
        @extend .input-kind-call-to-action;
      }
      &.segmentedControlInputInactive {
        @extend .input-kind-secondary;
      }
    }

    &.segmentedControlInputSizeNormal {
      @include helpers.mobile {
        &:first-child {
          border-top-left-radius: variables.$mobile-control-normal-border-radius;
          border-bottom-left-radius: variables.$mobile-control-normal-border-radius;
        }

        &:last-child {
          border-top-right-radius: variables.$mobile-control-normal-border-radius;
          border-bottom-right-radius: variables.$mobile-control-normal-border-radius;
        }
      }

      @include helpers.tablet {
        &:first-child {
          border-top-left-radius: variables.$tablet-control-normal-border-radius;
          border-bottom-left-radius: variables.$tablet-control-normal-border-radius;
        }

        &:last-child {
          border-top-right-radius: variables.$tablet-control-normal-border-radius;
          border-bottom-right-radius: variables.$tablet-control-normal-border-radius;
        }
      }

      @include helpers.desktop {
        &:first-child {
          border-top-left-radius: variables.$desktop-control-normal-border-radius;
          border-bottom-left-radius: variables.$desktop-control-normal-border-radius;
        }

        &:last-child {
          border-top-right-radius: variables.$desktop-control-normal-border-radius;
          border-bottom-right-radius: variables.$desktop-control-normal-border-radius;
        }
      }
    }

    &.segmentedControlInputSizeSmall {
      border-radius: 0;
      @extend .input-size-small;

      @include helpers.mobile {
        &:first-child {
          border-top-left-radius: variables.$mobile-control-small-border-radius;
          border-bottom-left-radius: variables.$mobile-control-small-border-radius;
        }

        &:last-child {
          border-top-right-radius: variables.$mobile-control-small-border-radius;
          border-bottom-right-radius: variables.$mobile-control-small-border-radius;
        }
      }

      @include helpers.tablet {
        &:first-child {
          border-top-left-radius: variables.$tablet-control-small-border-radius;
          border-bottom-left-radius: variables.$tablet-control-small-border-radius;
        }

        &:last-child {
          border-top-right-radius: variables.$tablet-control-small-border-radius;
          border-bottom-right-radius: variables.$tablet-control-small-border-radius;
        }
      }

      @include helpers.desktop {
        &:first-child {
          border-top-left-radius: variables.$desktop-control-small-border-radius;
          border-bottom-left-radius: variables.$desktop-control-small-border-radius;
        }

        &:last-child {
          border-top-right-radius: variables.$desktop-control-small-border-radius;
          border-bottom-right-radius: variables.$desktop-control-small-border-radius;
        }
      }
    }
  }
}

@use '../../styles/inputs';
@use '../../styles/colors';
@use '../../styles/helpers';
@use '../../styles/variables';

$checkbox-height-ratio: 0.7;

$mobile-checkbox-normal-size: calc(#{variables.$mobile-control-normal-height} * $checkbox-height-ratio);
$tablet-checkbox-normal-size: calc(#{variables.$tablet-control-normal-height} * $checkbox-height-ratio);
$desktop-checkbox-normal-size: calc(#{variables.$desktop-control-normal-height} * $checkbox-height-ratio);

$mobile-checkbox-small-size: calc(#{variables.$mobile-control-small-height} * $checkbox-height-ratio);
$tablet-checkbox-small-size: calc(#{variables.$tablet-control-small-height} * $checkbox-height-ratio);
$desktop-checkbox-small-size: calc(#{variables.$desktop-control-small-height} * $checkbox-height-ratio);

$mobile-checkbox-normal-font-size: variables.$mobile-control-normal-font-size;
$tablet-checkbox-normal-font-size: variables.$tablet-control-normal-font-size;
$desktop-checkbox-normal-font-size: variables.$desktop-control-normal-font-size;

$mobile-checkbox-small-font-size: calc($mobile-checkbox-normal-font-size * 0.8);
$tablet-checkbox-small-font-size: calc($tablet-checkbox-normal-font-size * 0.8);
$desktop-checkbox-small-font-size: calc($desktop-checkbox-normal-font-size * 0.8);

.inputContainer {
  display: flex;
  flex-direction: column;

  .textFieldInputContainer {
    @extend .input;

    &.small {
      @extend .input-size-small;
    }

    &.error {
      @extend .input-kind-destructive;
    }

    &.textFieldInputKindPrimary {
      @extend .input-kind-primary;
    }

    &.textFieldInputKindSecondary {
      @extend .input-kind-secondary;
    }

    &.textFieldInputKindModern {
      @extend .input-kind-modern;
    }

    .checkboxLabel {
      display: inline-flex;
      justify-content: center;
      align-items: center;
      background-color: transparent;
      border: variables.$control-outside-border-width solid colors.$control-primary-success-color;
      border-radius: 50%;
      transition: background-color 0.3s ease, border-color 0.3s ease;
      cursor: pointer;

      input[type=checkbox] {
        display: none;
      }

      .checkboxIcon {
        color: colors.$control-primary-normal-color;
      }

      &:has(> input:checked) {
        background-color: colors.$control-secondary-success-color;
      }

      &:has(> input:disabled) {
        background-color: colors.$gray-2;
        border-color: colors.$gray-3;
      }

      @include helpers.mobile {
        width: $mobile-checkbox-normal-size;
        height: $mobile-checkbox-normal-size;

        @include helpers.fontSize($tablet-checkbox-normal-font-size);
      }

      @include helpers.tablet {
        width: $tablet-checkbox-normal-size;
        height: $tablet-checkbox-normal-size;

        @include helpers.fontSize($tablet-checkbox-normal-font-size);
      }

      @include helpers.desktop {
        width: $desktop-checkbox-normal-size;
        height: $desktop-checkbox-normal-size;

        @include helpers.fontSize($desktop-checkbox-normal-font-size);
      }
    }

    @include helpers.mobile {
      &.small {
        .checkboxLabel {
          width: $mobile-checkbox-small-size;
          height: $mobile-checkbox-small-size;

          @include helpers.fontSize($mobile-checkbox-small-font-size);
        }
      }
    }

    @include helpers.tablet {
      &.small {
        .checkboxLabel {
          width: $tablet-checkbox-small-size;
          height: $tablet-checkbox-small-size;

          @include helpers.fontSize($tablet-checkbox-small-font-size);
        }
      }
    }

    @include helpers.desktop {
      &.small {
        .checkboxLabel {
          width: $desktop-checkbox-small-size;
          height: $desktop-checkbox-small-size;

          @include helpers.fontSize($desktop-checkbox-small-font-size);
        }
      }
    }
  }

  .errorContainer {
    @extend .input-error;
  }

  @include helpers.mobile {
    row-gap: variables.$mobile-control-normal-layout-gutter;
  }

  @include helpers.tablet {
    row-gap: variables.$tablet-control-normal-layout-gutter;
  }

  @include helpers.desktop {
    row-gap: variables.$desktop-control-normal-layout-gutter;
  }
}
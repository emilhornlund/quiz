@use '../../styles/colors';
@use '../../styles/helpers';
@use '../../styles/variables';

@mixin iconSize() {
  @include helpers.mobile {
    width: helpers.pxToRem(40px);
    height: helpers.pxToRem(40px);
  }

  @include helpers.tablet {
    width: helpers.pxToRem(42px);
    height: helpers.pxToRem(42px);
  }

  @include helpers.desktop {
    width: helpers.pxToRem(44px);
    height: helpers.pxToRem(44px);
  }
}

.main {
  display: flex;
  flex-direction: column;
  align-items: center;
  height: 100vh;
  max-height: 100dvh;
  padding: env(safe-area-inset-top) 0 env(safe-area-inset-bottom) 0;
  background: colors.$blue-1;
  background: linear-gradient(180deg, colors.$blue-1 25%, 75%, colors.$blue-2);
  overflow: hidden;
  -webkit-user-select: none;
  user-select: none;

  .header {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    width: 100%;

    @include helpers.mobile {
      padding: variables.$mobile-narrow-layout-gutter variables.$mobile-narrow-layout-gutter 0 variables.$mobile-narrow-layout-gutter;
      column-gap: variables.$mobile-narrow-layout-gutter
    }
    @include helpers.tablet {
      padding: variables.$tablet-narrow-layout-gutter variables.$tablet-narrow-layout-gutter 0 variables.$tablet-narrow-layout-gutter;
      column-gap: variables.$tablet-narrow-layout-gutter
    }
    @include helpers.desktop {
      padding: variables.$desktop-narrow-layout-gutter variables.$desktop-narrow-layout-gutter 0 variables.$desktop-narrow-layout-gutter;
      column-gap: variables.$desktop-narrow-layout-gutter;
    }

    .logo {
      position: relative;
      display: flex;
      flex-direction: row;
      align-items: center;
      appearance: none;
      border: none;
      outline: none;
      background: none;
      cursor: pointer;
      padding: 0;

      .icon {
        @include helpers.mobile {
          height: helpers.pxToRem(40px);
        }

        @include helpers.tablet {
          height: helpers.pxToRem(42px);
        }

        @include helpers.desktop {
          height: helpers.pxToRem(44px);
        }
      }

      .text {
        position: relative;
        @include helpers.fontSize(20px);
        font-weight: bolder;
        color: colors.$white;
        top: helpers.pxToRem(-1px);
      }

      @include helpers.mobile {
        column-gap: variables.$mobile-narrow-layout-gutter;
      }

      @include helpers.tablet {
        column-gap: variables.$tablet-narrow-layout-gutter;

        .text {
          @include helpers.fontSize(24px);
        }
      }

      @include helpers.desktop {
        column-gap: variables.$desktop-narrow-layout-gutter;

        .text {
          @include helpers.fontSize(27px);
        }
      }
    }

    .side {
      display: flex;
      flex-direction: row;
      justify-content: flex-end;
      align-items: center;
      flex: 1;

      @include helpers.mobile {
        column-gap: variables.$mobile-narrow-layout-gutter
      }
      @include helpers.tablet {
        column-gap: variables.$tablet-narrow-layout-gutter
      }
      @include helpers.desktop {
        column-gap: variables.$desktop-narrow-layout-gutter;
      }

      .verticalLine {
        border-left-style: solid;
        border-left-color: white;
        height: 70%;

        @include helpers.mobile {
          border-left-width: 1px;
        }
        @include helpers.tablet {
          border-left-width: 2px;
        }
        @include helpers.desktop {
          border-left-width: 2px;
        }
      }

      a {
        font-weight: bold;
        color: colors.$white;
        text-decoration: none;
        transition: all 0.3s ease;
        position: relative;
        padding: 8px 16px;
        border-radius: 8px;
        background: rgba(255, 255, 255, 0.1);
        backdrop-filter: blur(10px);
        border: 1px solid rgba(255, 255, 255, 0.2);

        &:hover {
          background: rgba(255, 255, 255, 0.2);
          transform: translateY(-2px);
          box-shadow: 0 4px 15px rgba(255, 255, 255, 0.2);
        }

        &:active {
          transform: translateY(0);
        }

        @include helpers.mobile {
          @include helpers.fontSize(16px);
          padding: 6px 12px;
        }
        @include helpers.tablet {
          @include helpers.fontSize(18px);
          padding: 8px 16px;
        }
        @include helpers.desktop {
          @include helpers.fontSize(20px);
          padding: 10px 20px;
        }
      }

      .menuButtonWrapper {
        display: flex;
        flex-direction: column;
        align-items: center;

        @include iconSize();

        button {
          display: flex;
          flex-direction: column;
          appearance: none;
          border: none;
          outline: none;
          background: none;
          cursor: pointer;
          padding: 0;

          img {
            filter: brightness(0) saturate(100%) invert(100%) sepia(4%) saturate(1%) hue-rotate(271deg) brightness(104%) contrast(100%);

            &:hover {
              filter: brightness(0) saturate(100%) invert(93%) sepia(16%) saturate(219%) hue-rotate(181deg) brightness(95%) contrast(86%);
            }

            @include iconSize();
          }
        }
      }
    }

    @include helpers.tablet {
      &:not(&.fullWidth) {
        width: variables.$tablet-width;
      }
    }
    @include helpers.desktop {
      &:not(&.fullWidth) {
        width: variables.$desktop-width;
      }
    }
  }

  .content {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: stretch;
    flex: 1;
    min-height: 0;
    overflow-x: hidden;
    overflow-y: auto;
    width: 100%;

    .contentWrapper {
      display: block;

      .contentInner {
        display: flex;
        flex-direction: column;
        align-items: center;
        width: 100%;
      }
    }

    -ms-overflow-style: none;
    scrollbar-width: none;
    &::-webkit-scrollbar {
      display: none;
    }

    &.noPadding {
      padding-bottom: 0;
    }

    &.startAlign {
      > .contentWrapper {
        margin: 0 auto; /* explicit start alignment */
      }
    }

    &.centerAlign {
      > .contentWrapper {
        margin-block: auto;
        margin-inline: auto;
      }
    }

    &.spaceBetweenAlign {
      > .contentWrapper {
        margin: 0 auto;

        > .contentInner {
          justify-content: space-between;
        }
      }
    }

    &.fullHeight {
      > .contentWrapper {
        height: 100%;

        > .contentInner {
          flex: 1;
          height: 100%;
        }
      }
    }

    @include helpers.mobile {
      padding: variables.$mobile-layout-gutter;

      > .contentWrapper {
        width: 100%;

        > .contentInner {
          row-gap: calc(#{variables.$mobile-layout-gutter} * 0.5);
        }
      }
    }

    @include helpers.tablet {
      padding: variables.$tablet-layout-gutter;

      > .contentWrapper {
        &.smallWidth {
          width: variables.$mobile-width;
        }

        &.mediumWidth {
          width: variables.$tablet-width;
        }

        &.fullWidth {
          width: variables.$tablet-width;
        }

        > .contentInner {
          row-gap: variables.$tablet-layout-gutter;
        }
      }
    }

    @include helpers.desktop {
      padding: variables.$desktop-layout-gutter;

      > .contentWrapper {
        &.smallWidth {
          width: variables.$mobile-width;
        }

        &.mediumWidth {
          width: variables.$tablet-width;
        }

        &.fullWidth {
          width: variables.$desktop-width;
        }

        > .contentInner {
          row-gap: variables.$desktop-layout-gutter;
        }
      }
    }
  }

  .footer {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    width: 100%;
    color: colors.$white;

    @include helpers.mobile() {
      padding: 0 variables.$mobile-narrow-layout-gutter variables.$mobile-narrow-layout-gutter variables.$mobile-narrow-layout-gutter;
      column-gap: variables.$mobile-narrow-layout-gutter;
    }

    @include helpers.tablet {
      padding: 0 variables.$tablet-narrow-layout-gutter variables.$tablet-narrow-layout-gutter variables.$tablet-narrow-layout-gutter;
      column-gap: variables.$tablet-narrow-layout-gutter;

      &:not(&.fullWidth) {
        width: variables.$tablet-width;
      }
    }

    @include helpers.desktop {
      padding: 0 variables.$desktop-narrow-layout-gutter variables.$desktop-narrow-layout-gutter variables.$desktop-narrow-layout-gutter;
      column-gap: variables.$desktop-narrow-layout-gutter;

      &:not(&.fullWidth) {
        width: variables.$desktop-width;
      }
    }
  }
}
